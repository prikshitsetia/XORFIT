[{"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\index.js":"1","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js":"2","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\App.js":"3","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Nav.js":"4","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Options.js":"5","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js":"6","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js":"7","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Register.js":"8","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Home.js":"9","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Player.js":"10","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Login.js":"11","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Controls.js":"12","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Details.js":"13"},{"size":565,"mtime":1608008405705,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1608006547553,"results":"16","hashOfConfig":"15"},{"size":1324,"mtime":1608234178552,"results":"17","hashOfConfig":"15"},{"size":723,"mtime":1608233226466,"results":"18","hashOfConfig":"15"},{"size":3983,"mtime":1608233226468,"results":"19","hashOfConfig":"15"},{"size":1846,"mtime":1608233226479,"results":"20","hashOfConfig":"15"},{"size":2665,"mtime":1608277502996,"results":"21","hashOfConfig":"15"},{"size":5973,"mtime":1608233226476,"results":"22","hashOfConfig":"15"},{"size":376,"mtime":1608233226406,"results":"23","hashOfConfig":"15"},{"size":1519,"mtime":1608269896730,"results":"24","hashOfConfig":"15"},{"size":4302,"mtime":1608233226410,"results":"25","hashOfConfig":"15"},{"size":821,"mtime":1608273765507,"results":"26","hashOfConfig":"15"},{"size":383,"mtime":1608269905205,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"hrwe1s",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\index.js",[],["58","59"],"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js",[],"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\App.js",["60"],"import Nav from \"./components/Nav\";\r\nimport Options from \"./components/Options\";\r\nimport Yoga from \"./components/Yoga\";\r\nimport Meditation from \"./components/Meditation\";\r\nimport Home from \"./components/Home\";\r\nimport Register from \"./components/Register\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" render={(props) => <Home {...props} />} />\r\n\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/register\"\r\n              render={(props) => <Register {...props} />}\r\n            />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/options\"\r\n              render={(props) => <Options {...props} />}\r\n            />\r\n\r\n\r\n           <Route exact path='/yoga' render = { props => (\r\n            <Yoga {...props} />\r\n            )} />\r\n        \r\n            <Route\r\n              exact\r\n              path=\"/meditation\"\r\n              render={(props) => <Meditation {...props} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Nav.js",[],"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Options.js",["61","62","63","64"],"import React, { Component } from \"react\";\r\nimport yoga from \"../yoga1.jpg\";\r\nimport yogaButton from \"../yoga-button.png\";\r\nimport meditationButton from \"../meditation-button.png\";\r\nimport excerciseButton from \"../excercise-button.png\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Options extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      min : '0',\r\n      sec: '0',\r\n      time: \"0\",\r\n      showMedOptions: false,\r\n    };\r\n  }\r\n\r\n  handelChange = (e) => {\r\n    this.setState({ option: e.target.name });\r\n    if (e.target.name === \"yogaButton\") {\r\n      this.props.history.push(\"/yoga\");\r\n\r\n    } else if (e.target.name === \"excerciseButton\"){\r\n      this.props.history.push(\"/excercise\");\r\n    }\r\n    else {\r\n      this.setState({\r\n        showMedOptions: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  onMedClick = (e) =>{\r\n    console.log(e.target.name);\r\n    this.props.history.push(\"/meditation/\"+e.target.name);\r\n  }\r\n\r\n  setClock = (e) => {\r\n    this.setState({ \r\n      time: this.state.min+\":\"+this.state.sec\r\n    })\r\n    e.target.style.display=\"none\";\r\n  }\r\n\r\n  onTimeChange = (e) => {\r\n    // console.log(e.target)\r\n    if(e.target.value <= 60){\r\n      this.setState({ \r\n        [e.target.name]: e.target.value\r\n      })\r\n    }\r\n    else{\r\n      alert(\"Enter Valid Time\")\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={yoga} className=\"imageAnim\" alt=\"Yoga\" />\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n        \r\n            <div id=\"alarm-dialog\">\r\n\r\n                <h2>Set Timer</h2>\r\n\r\n                <label className=\"minutes\">\r\n                    Minutes\r\n                    <input type=\"number\"  min=\"0\" max=\"60\" value={this.state.min} name=\"min\" onChange={this.onTimeChange} placeholder=\"0\" />\r\n                </label>\r\n                    <span id=\"alarm-colon\">:</span>\r\n                <label className=\"seconds\" >\r\n                    Seconds\r\n                    <input type=\"number\"  min=\"0\" max=\"60\" value={this.state.sec} name=\"sec\" onChange={this.onTimeChange} placeholder=\"0\" />\r\n                </label>\r\n\r\n                <div className=\"button-holder\">\r\n                    <button id=\"alarm-set\" className=\"btn btn-alarm\" style={{width:\"20%\"}} onClick={this.setClock} ref={this.myRef}>Set</button>\r\n                    <button id=\"alarm-clear\" className=\"btn btn-alarm\" style={{width:\"20%\"}} onClick={()=>{\r\n                     this.myRef.current.style.display = \"inline\";\r\n                      this.setState({\r\n                        min : 0,\r\n                        sec: 0,\r\n                      })\r\n                    }} >Clear</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"activity-dialog\">\r\n                <h2>Select Activity</h2>\r\n                <button  className=\"btn\" ><img src={yogaButton} height=\"140\" name=\"yogaButton\" onClick={this.handelChange}></img></button>\r\n                <button  className=\"btn\" ><img src={meditationButton} height=\"140\" name=\"meditationButton\" onClick={this.handelChange}></img></button>\r\n                <button  className=\"btn\" ><img src={excerciseButton} height=\"140\" name=\"excerciseButton\" onClick={this.handelChange}></img></button>\r\n            </div>\r\n            {this.state.showMedOptions ? \r\n            <div id=\"med-dialog\">\r\n                <h2>Select Meditation Type</h2>\r\n                <button  className=\"btn btn-alarm\" name=\"mindfullness\" onClick={this.onMedClick}>Mindfulness</button>\r\n                <button  className=\"btn btn-alarm\" name=\"stress\" onClick={this.onMedClick}>Stress Relieve</button>\r\n                <button  className=\"btn btn-alarm\" name=\"anxiety\" onClick={this.onMedClick}>Anxiety Relieve</button>\r\n            </div> \r\n            : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js",[],"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js",["65","66"],"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Register.js",[],"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Home.js",[],"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Player.js",[],"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Login.js",["67"],"import React, { Component } from \"react\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport \"./Login.css\";\r\nimport axios from \"axios\";\r\nconst qs = require(\"querystring\");\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      link: \" https://809feafcdee6.ngrok.io/login\",\r\n      input: {  \r\n        emailAddress: \"\",\r\n        password: \"\",      \r\n      },\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState((prevState) => {\r\n      return {\r\n        input: {\r\n          ...prevState.input,\r\n          [name]: value,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    console.log(this.state.input);\r\n    const params = {\r\n      email: this.state.input.emailAddress,  \r\n      password: this.state.input.password,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n    };\r\n    console.log(params);\r\n  \r\n    axios.post(this.state.link, qs.stringify(params), config).then(\r\n      (response) => {\r\n  \r\n        if(response.data ===1){\r\n          // alert(\"Welcome to XorFit\");\r\n         this.props.history.push('/options');\r\n        }\r\n        else{\r\n          alert(\"Wrong Username or Password\")\r\n        }\r\n        \r\n        \r\n      },\r\n      (error) => {\r\n        alert(\"Please try again later\")\r\n        console.log(error);\r\n      }\r\n    );\r\n   \r\n   \r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container login-container\">\r\n        <div className=\"d-flex justify-content-center h-100\">\r\n          <div className=\"card login-card\">\r\n            <div className=\"card-header\">\r\n              <h3>Sign In</h3>\r\n              <div className=\"d-flex justify-content-end social_icon\">\r\n                <span>\r\n                  <i className=\"fab fa-google-plus-square\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"input-group form-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fas fa-user\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email address\"\r\n                    name=\"emailAddress\"\r\n                    value={this.state.input.emailAddress}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group form-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fas fa-key\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.input.password}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"row align-items-center remember\">\r\n                  <input type=\"checkbox\" />\r\n                  Remember Me\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Login\"\r\n                    className=\"btn float-right login_btn\"\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"d-flex justify-content-center links\">\r\n                Don't have an account?<a href=\"register\">Sign Up</a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"#\">Forgot your password?</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Login);","C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Controls.js",[],"C:\\Users\\kadam_ap\\Desktop\\XORFIT\\client\\xorfit\\src\\components\\Details.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":11},{"ruleId":"72","severity":1,"message":"76","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":99,"column":43,"nodeType":"79","endLine":99,"endColumn":124},{"ruleId":"77","severity":1,"message":"78","line":100,"column":43,"nodeType":"79","endLine":100,"endColumn":136},{"ruleId":"77","severity":1,"message":"78","line":101,"column":43,"nodeType":"79","endLine":101,"endColumn":134},{"ruleId":"72","severity":1,"message":"80","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":10},{"ruleId":"81","severity":1,"message":"82","line":41,"column":6,"nodeType":"83","endLine":41,"endColumn":24,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":131,"column":17,"nodeType":"79","endLine":131,"endColumn":29},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'bg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'songs.length'. Either include it or remove the dependency array.","ArrayExpression",["89"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [currentSongIndex, songs.length]",{"range":"92","text":"93"},[1012,1030],"[currentSongIndex, songs.length]"]