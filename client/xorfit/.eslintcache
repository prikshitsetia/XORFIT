[{"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\index.js":"1","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\App.js":"2","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js":"3","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Nav.js":"4","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js":"5","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Options.js":"6","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js":"7","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Player.js":"8","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Controls.js":"9","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Details.js":"10"},{"size":565,"mtime":1608126386820,"results":"11","hashOfConfig":"12"},{"size":1072,"mtime":1608128646043,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1608126386821,"results":"14","hashOfConfig":"12"},{"size":723,"mtime":1608145058148,"results":"15","hashOfConfig":"12"},{"size":1846,"mtime":1608127407925,"results":"16","hashOfConfig":"12"},{"size":4717,"mtime":1608127107135,"results":"17","hashOfConfig":"12"},{"size":1813,"mtime":1608205898433,"results":"18","hashOfConfig":"12"},{"size":1517,"mtime":1608143993190,"results":"19","hashOfConfig":"12"},{"size":811,"mtime":1608144791359,"results":"20","hashOfConfig":"12"},{"size":382,"mtime":1608144072669,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"szlllp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\index.js",[],["44","45"],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\App.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Nav.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Options.js",["46"],"import React, { Component } from \"react\";\r\nimport yoga from \"../yoga1.jpg\";\r\n\r\nexport default class Options extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      time: \"\",\r\n      option: \"meditation\",\r\n      showMedOptions: true,\r\n      medOption: \"Mindfulness\",\r\n      yogaoption: \"vrikshasan\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state);\r\n\r\n    if (this.state.option === \"yoga\") {\r\n      this.props.history.push(\"/yoga/:treePose\");\r\n    }\r\n  };\r\n\r\n  handelChange = (e) => {\r\n    this.setState({ option: e.target.value });\r\n    if (this.state.option === \"yoga\") {\r\n      this.setState({\r\n        showMedOptions: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showMedOptions: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={yoga} className=\"imageAnim\" alt=\"Yoga\" />\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <div\r\n              className=\"container\"\r\n              style={{\r\n                width: \"550px\",\r\n                background: \"black\",\r\n                borderRadius: \"8px\",\r\n                marginRight: \"280px\",\r\n                marginTop: \"70px\",\r\n              }}\r\n            >\r\n              <form\r\n                onSubmit={this.handleSubmit}\r\n                className=\"OptionForm\"\r\n                style={{}}\r\n              >\r\n                <br />\r\n                <h1 style={{ fontFamily: \"Catamaran\" }}></h1>\r\n\r\n                <div className=\"form-group m-1\">\r\n                  <label style={{ float: \"left\" }}>\r\n                    How much time do you have?\r\n                  </label>\r\n                  <input\r\n                    placeholder=\"time\"\r\n                    onChange={(e) => {\r\n                      this.setState({ time: e.target.value });\r\n                    }}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group m-1\">\r\n                  <label style={{ float: \"left\" }}>\r\n                    Which activity would you preffer?\r\n                  </label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={this.state.option}\r\n                    onChange={this.handelChange}\r\n                  >\r\n                    <option value=\"meditation\">Meditation</option>\r\n                    <option value=\"yoga\">Yoga</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {this.state.showMedOptions && (\r\n                  <div className=\"form-group m-1\">\r\n                    <label style={{ float: \"left\" }}>\r\n                      What do you want to work on?\r\n                    </label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={this.state.medOption}\r\n                      onChange={(e) => {\r\n                        this.setState({ medOption: e.target.value });\r\n                      }}\r\n                    >\r\n                      <option value=\"meditation\">Mindfulness</option>\r\n                      <option value=\"yoga\">Realeasing Stress</option>\r\n                      <option value=\"yoga\">Realeasing Anxiety</option>\r\n                    </select>\r\n                  </div>\r\n                )}\r\n\r\n                {!this.state.showMedOptions && (\r\n                  <div className=\"form-group m-1\">\r\n                    <label style={{ float: \"left\" }}>\r\n                      What do you want to work on?\r\n                    </label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={this.state.yogaoption}\r\n                      onChange={(e) => {\r\n                        this.setState({ yogaoption: e.target.value });\r\n                      }}\r\n                    >\r\n                      <option value=\"vrikshasan\">Tree Pose</option>\r\n                      <option value=\"yoga\">Chair Pose</option>\r\n                    </select>\r\n                  </div>\r\n                )}\r\n\r\n                <br />\r\n                <button\r\n                  className=\"btn btn-primary  btn-block m-2\"\r\n                  type=\"submit\"\r\n                  style={{\r\n                    border: \"none\",\r\n                    color: \"white\",\r\n                    background: \"#a30a3a\",\r\n                  }}\r\n                >\r\n                  Submit\r\n                </button>\r\n\r\n                <br />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js",["47"],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Player.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Controls.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Details.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":66,"column":17,"nodeType":"54","endLine":66,"endColumn":57},{"ruleId":"55","severity":1,"message":"56","line":40,"column":6,"nodeType":"57","endLine":40,"endColumn":24,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'songs.length'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [currentSongIndex, songs.length]",{"range":"64","text":"65"},[984,1002],"[currentSongIndex, songs.length]"]