[{"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\index.js":"1","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js":"2","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\App.js":"3","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Options.js":"4","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js":"5","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Nav.js":"6","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Home.js":"7","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Login.js":"8","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Register.js":"9"},{"size":565,"mtime":1608128724465,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1608128724467,"results":"12","hashOfConfig":"11"},{"size":1176,"mtime":1608138130297,"results":"13","hashOfConfig":"11"},{"size":5069,"mtime":1608138086124,"results":"14","hashOfConfig":"11"},{"size":1262,"mtime":1608128724460,"results":"15","hashOfConfig":"11"},{"size":1224,"mtime":1608138076111,"results":"16","hashOfConfig":"11"},{"size":376,"mtime":1608135436127,"results":"17","hashOfConfig":"11"},{"size":3002,"mtime":1608205849981,"results":"18","hashOfConfig":"11"},{"size":5256,"mtime":1608206382047,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1thu545",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\index.js",[],["41","42"],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\App.js",["43"],"import Nav from './components/Nav'\r\nimport Options from './components/Options'\r\nimport Yoga from './components/Yoga'\r\nimport Home from './components/Home'\r\nimport Register from './components/Register';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n \r\n} from \"react-router-dom\";\r\nimport React, { Component } from 'react'\r\nclass  App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       \r\n    }\r\n  }\r\n  \r\n\r\n  render(){\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n        <Route exact path='/' render = { props => (\r\n            <Home {...props} />\r\n            )} />\r\n          \r\n\r\n          <Switch>\r\n\r\n          <Route exact path='/register' render = { props => (\r\n            <Register {...props} />\r\n            )} />\r\n          \r\n\r\n\r\n            <Route exact path='/options' render = { props => (\r\n            <Options {...props} />\r\n            )} />\r\n\r\n            <Route exact path='/yoga/:pose' render = { props => (\r\n            <Yoga {...props} />\r\n            )} />\r\n          </Switch>\r\n  \r\n             </div>\r\n\r\n      </Router>\r\n      \r\n    );\r\n\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Options.js",["44","45","46","47","48"],"import React, { Component } from 'react'\r\nimport yoga from '../yoga1.jpg'\r\nimport Nav from './Nav'\r\n\r\nexport default class Options extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             time:'',\r\n             option:'meditation',\r\n             showMedOptions:true,\r\n             medOption:'Mindfulness',\r\n             yogaoption:'vrikshasan'\r\n        }\r\n    }\r\n    \r\n\r\n    handleSubmit=async (e)=>{\r\n        e.preventDefault();\r\n\r\n        console.log(this.state)\r\n\r\n        if(this.state.option == \"yoga\"){\r\n            this.props.history.push('/yoga/:treePose')\r\n\r\n\r\n        }\r\n       \r\n    }\r\n\r\n    handelChange = e =>{\r\n        this.setState({option:e.target.value})\r\n        if (this.state.option == \"yoga\"){\r\n            this.setState({\r\n                showMedOptions:true\r\n            })\r\n        }else{\r\n            this.setState({\r\n                showMedOptions:false\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <div className=\"row\">\r\n                    \r\n\r\n                    <div className=\"col-md-6\">\r\n                        <img src={yoga} className=\"imageAnim\" />\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"col-md-6\" >\r\n\r\n                        <div className=\"container\" style={{width:\"550px\",background:\"black\",borderRadius:\"8px\",marginRight:\"280px\",marginTop:\"70px\"}}>\r\n\r\n                            <form onSubmit={this.handleSubmit} className=\"OptionForm\" style={{}}> \r\n                            <br/>\r\n                            <h1 style={{fontFamily:\"Catamaran\"}}></h1>\r\n\r\n                            <div className=\"form-group m-1\">\r\n\r\n                                <label style={{float:\"left\"}}>How much time do you have?</label>\r\n                                <input  \r\n                                    placeholder=\"time\" \r\n                                    onChange={(e)=>{this.setState({time:e.target.value})}}\r\n                                    className=\"form-control\"\r\n                                />\r\n\r\n                                </div>\r\n\r\n                                <div className=\"form-group m-1\">\r\n\r\n                                    <label style={{float:\"left\"}}>Which activity would you preffer?</label>\r\n                                    <select className=\"form-control\" value={this.state.option} \r\n                                    onChange={this.handelChange}>\r\n\r\n                                    <option value=\"meditation\">Meditation</option>\r\n                                    <option value=\"yoga\">Yoga</option>\r\n                                        \r\n                                    </select> \r\n\r\n\r\n                                </div>\r\n\r\n                                {   this.state.showMedOptions && (\r\n\r\n                                    <div className=\"form-group m-1\">\r\n\r\n                                    <label style={{float:\"left\"}}>What do you want to work on?</label>\r\n                                    <select className=\"form-control\" value={this.state.medOption} \r\n                                    onChange={(e)=>{this.setState({medOption:e.target.value})}}>\r\n\r\n                                    <option value=\"meditation\">Mindfulness</option>\r\n                                    <option value=\"yoga\">Realeasing Stress</option>\r\n                                    <option value=\"yoga\">Realeasing Anxiety</option>\r\n                                        \r\n                                    </select> \r\n\r\n\r\n                                    </div>\r\n\r\n                                )}\r\n\r\n                                {   !this.state.showMedOptions && (\r\n\r\n                                <div className=\"form-group m-1\">\r\n\r\n                                <label style={{float:\"left\"}}>What do you want to work on?</label>\r\n                                <select className=\"form-control\" value={this.state.yogaoption} \r\n                                onChange={(e)=>{this.setState({yogaoption:e.target.value})}}>\r\n\r\n                                <option value=\"vrikshasan\">Tree Pose</option>\r\n                                <option value=\"yoga\">Chair Pose</option>\r\n                                    \r\n                                </select> \r\n\r\n\r\n                                </div>\r\n\r\n                                )}\r\n                                \r\n\r\n                                <br/>\r\n                                <button className=\"btn btn-primary  btn-block m-2\" type=\"submit\" style={{border:\"none\",color:\"white\",background:\"#a30a3a\"}}>\r\n                                    Submit\r\n\r\n                                </button>\r\n\r\n                                <br/>\r\n\r\n\r\n                            \r\n                            </form> \r\n\r\n                        </div>\r\n\r\n                        \r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Nav.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Home.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Login.js",["49","50"],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Register.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":11},{"ruleId":"55","severity":1,"message":"56","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":11},{"ruleId":"59","severity":1,"message":"60","line":24,"column":30,"nodeType":"61","messageId":"62","endLine":24,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":34,"column":31,"nodeType":"61","messageId":"62","endLine":34,"endColumn":33},{"ruleId":"63","severity":1,"message":"64","line":54,"column":25,"nodeType":"65","endLine":54,"endColumn":65},{"ruleId":"66","severity":1,"message":"67","line":64,"column":29,"nodeType":"65","endLine":64,"endColumn":66},{"ruleId":"55","severity":1,"message":"68","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":53,"column":33,"nodeType":"65","endLine":53,"endColumn":45},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]