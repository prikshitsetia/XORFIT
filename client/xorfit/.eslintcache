[{"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\index.js":"1","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js":"2","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\App.js":"3","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Options.js":"4","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js":"5","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Nav.js":"6","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Home.js":"7","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Login.js":"8","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Register.js":"9","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js":"10","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Player.js":"11","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Controls.js":"12","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Details.js":"13"},{"size":565,"mtime":1608128724465,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1608128724467,"results":"16","hashOfConfig":"15"},{"size":1323,"mtime":1608225415080,"results":"17","hashOfConfig":"15"},{"size":4043,"mtime":1608225237106,"results":"18","hashOfConfig":"15"},{"size":1846,"mtime":1608206465514,"results":"19","hashOfConfig":"15"},{"size":723,"mtime":1608206873499,"results":"20","hashOfConfig":"15"},{"size":376,"mtime":1608135436127,"results":"21","hashOfConfig":"15"},{"size":2767,"mtime":1608225305200,"results":"22","hashOfConfig":"15"},{"size":5636,"mtime":1608225305235,"results":"23","hashOfConfig":"15"},{"size":1813,"mtime":1608225305204,"results":"24","hashOfConfig":"15"},{"size":1517,"mtime":1608206465479,"results":"25","hashOfConfig":"15"},{"size":811,"mtime":1608208558369,"results":"26","hashOfConfig":"15"},{"size":382,"mtime":1608206465474,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1thu545",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\index.js",[],["58","59"],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\App.js",["60"],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Options.js",["61","62","63","64"],"import React, { Component } from \"react\";\r\nimport yoga from \"../yoga1.jpg\";\r\nimport yogaButton from \"../yoga-button.png\";\r\nimport meditationButton from \"../meditation-button.png\";\r\nimport excerciseButton from \"../excercise-button.png\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Options extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      min : '0',\r\n      sec: '0',\r\n      time: \"0\",\r\n      showMedOptions: false,\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state);\r\n\r\n    if (this.state.option === \"yoga\") {\r\n      this.props.history.push(\"/yoga/:treePose\");\r\n    }\r\n  };\r\n\r\n  handelChange = (e) => {\r\n    this.setState({ option: e.target.name });\r\n    if (e.target.name === \"yogaButton\") {\r\n      this.props.history.push(\"/yoga\");\r\n\r\n    } else if (e.target.name === \"excerciseButton\"){\r\n      this.props.history.push(\"/excercise\");\r\n    }\r\n    else {\r\n      this.setState({\r\n        showMedOptions: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  onMedClick = (e) =>{\r\n    console.log(e.target.name);\r\n    this.props.history.push(\"/meditation\");\r\n  }\r\n\r\n  setClock = (e) => {\r\n    this.setState({ \r\n      time: this.state.min+\":\"+this.state.sec\r\n    })\r\n    console.log(this.state.time)\r\n  }\r\n\r\n  onTimeChange = (e) => {\r\n    console.log(e.target)\r\n    if(e.target.value <= 60){\r\n      this.setState({ \r\n        [e.target.name]: e.target.value\r\n      })\r\n    }\r\n    else{\r\n      alert(\"Enter Valid Time\")\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={yoga} className=\"imageAnim\" alt=\"Yoga\" />\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n        \r\n            <div id=\"alarm-dialog\">\r\n\r\n                <h2>Set Timer</h2>\r\n\r\n                <label className=\"minutes\">\r\n                    Minutes\r\n                    <input type=\"number\"  min=\"0\" max=\"60\" value={this.state.min} name=\"min\" onChange={this.onTimeChange} placeholder=\"0\" />\r\n                </label>\r\n                    <span id=\"alarm-colon\">:</span>\r\n                <label className=\"seconds\" >\r\n                    Seconds\r\n                    <input type=\"number\"  min=\"0\" max=\"60\" value={this.state.sec} name=\"sec\" onChange={this.onTimeChange} placeholder=\"0\" />\r\n                </label>\r\n\r\n                <div className=\"button-holder\">\r\n                    <button id=\"alarm-set\" className=\"btn btn-alarm\" style={{width:\"20%\"}} onClick={this.setClock}>Set</button>\r\n                    <button id=\"alarm-clear\" className=\"btn btn-alarm\" style={{width:\"20%\"}} onClick={()=>{\r\n                      this.setState({\r\n                        min : 0,\r\n                        sec: 0,\r\n                      })\r\n                    }} >Clear</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"activity-dialog\">\r\n                <h2>Select Activity</h2>\r\n                <button  className=\"btn\" ><img src={yogaButton} height=\"140\" name=\"yogaButton\" onClick={this.handelChange}></img></button>\r\n                <button  className=\"btn\" ><img src={meditationButton} height=\"140\" name=\"meditationButton\" onClick={this.handelChange}></img></button>\r\n                <button  className=\"btn\" ><img src={excerciseButton} height=\"140\" name=\"excerciseButton\" onClick={this.handelChange}></img></button>\r\n            </div>\r\n            {this.state.showMedOptions ? \r\n            <div id=\"med-dialog\">\r\n                <h2>Select Meditation Type</h2>\r\n                <button  className=\"btn btn-alarm\" name=\"mindfullness\" onClick={this.onMedClick}>Mindfulness</button>\r\n                <button  className=\"btn btn-alarm\" name=\"stress\" onClick={this.onMedClick}>Stress Relieve</button>\r\n                <button  className=\"btn btn-alarm\" name=\"anxiety\" onClick={this.onMedClick}>Anxiety Relieve</button>\r\n            </div> \r\n            : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Nav.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Home.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Login.js",["65","66"],"import React, { Component } from 'react'\r\nimport './Login.css';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            link :  \"https:/rude-dingo-20.loca.lt/signup\",\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container login-container\">\r\n                <div className=\"d-flex justify-content-center h-100\">\r\n                    <div className=\"card login-card\">\r\n                        <div className=\"card-header\">\r\n                            <h3>Sign In</h3>\r\n                            <div className=\"d-flex justify-content-end social_icon\">\r\n                                <span><i className=\"fab fa-google-plus-square\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.savaData}>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-user\"></i></span>\r\n                                    </div>\r\n                                    <input type=\"email\" className=\"form-control\" placeholder=\"Email address\" required/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-key\"></i></span>\r\n                                    </div>\r\n                                    <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required />\r\n                                </div>\r\n                                <div className=\"row align-items-center remember\">\r\n                                    <input type=\"checkbox\"/>Remember Me\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <div className=\"d-flex justify-content-center links\">\r\n                                Don't have an account?<a href=\"register\">Sign Up</a>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <a href=\"#\">Forgot your password?</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Register.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js",["67"],"import { useState, useEffect } from \"react\";\r\nimport Player from \"./Player\";\r\n\r\nfunction Meditation() {\r\n  const [songs] = useState([\r\n    {\r\n      title: \"Mindfullness\",\r\n      artist: \"Help Guide\",\r\n      img_src: \"./images/song-1.jpg\",\r\n      src: \"./audioFile/song1.mp3\",\r\n      time: 5,\r\n    },\r\n    {\r\n      title: \"Breathing Meditation\",\r\n      artist: \"Help Guide\",\r\n      img_src: \"./images/song-2.jpg\",\r\n      src: \"./audioFile/song2.mp3\",\r\n      time: 10,\r\n    },\r\n    {\r\n      title: \"Breathing Meditation\",\r\n      artist: \"Help Guide\",\r\n      img_src: \"./images/song-2.jpg\",\r\n      src: \"./audioFile/song3.mp3\",\r\n      time: 5,\r\n    },\r\n  ]);\r\n\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const [nextSongIndex, setNextSongIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setNextSongIndex(() => {\r\n      if (currentSongIndex + 1 > songs.length - 1) {\r\n        return 0;\r\n      } else {\r\n        return currentSongIndex + 1;\r\n      }\r\n    });\r\n  }, [currentSongIndex]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div class=\"card text-white bg-primary mb-3 col\">\r\n        <div class=\"card-header\"> Play List</div>\r\n        <div class=\"card-body\">\r\n          {songs.map((s) => {\r\n            return (\r\n              <div className=\"mt-3\">\r\n                <h5 class=\"card-title\">{s.title}</h5>\r\n                <p class=\"card-text\">\r\n                  {s.artist} {s.time}:00\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"app col\">\r\n        <Player\r\n          currentSongIndex={currentSongIndex}\r\n          setCurrentSongIndex={setCurrentSongIndex}\r\n          nextSongIndex={nextSongIndex}\r\n          songs={songs}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Meditation;\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Player.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Controls.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Details.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":11},{"ruleId":"72","severity":1,"message":"76","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":108,"column":43,"nodeType":"79","endLine":108,"endColumn":124},{"ruleId":"77","severity":1,"message":"78","line":109,"column":43,"nodeType":"79","endLine":109,"endColumn":136},{"ruleId":"77","severity":1,"message":"78","line":110,"column":43,"nodeType":"79","endLine":110,"endColumn":134},{"ruleId":"72","severity":1,"message":"80","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":53,"column":33,"nodeType":"79","endLine":53,"endColumn":45},{"ruleId":"83","severity":1,"message":"84","line":40,"column":6,"nodeType":"85","endLine":40,"endColumn":24,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'songs.length'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [currentSongIndex, songs.length]",{"range":"92","text":"93"},[984,1002],"[currentSongIndex, songs.length]"]