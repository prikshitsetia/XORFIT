[{"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\index.js":"1","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\App.js":"2","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js":"3","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Nav.js":"4","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js":"5","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Options.js":"6","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js":"7","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Player.js":"8","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Controls.js":"9","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Details.js":"10","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Home.js":"11","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Login.js":"12","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Register.js":"13"},{"size":565,"mtime":1608126386820,"results":"14","hashOfConfig":"15"},{"size":1346,"mtime":1608207535264,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1608126386821,"results":"17","hashOfConfig":"15"},{"size":723,"mtime":1608145058148,"results":"18","hashOfConfig":"15"},{"size":1846,"mtime":1608127407925,"results":"19","hashOfConfig":"15"},{"size":4717,"mtime":1608127107135,"results":"20","hashOfConfig":"15"},{"size":1813,"mtime":1608205898433,"results":"21","hashOfConfig":"15"},{"size":1517,"mtime":1608143993190,"results":"22","hashOfConfig":"15"},{"size":811,"mtime":1608144791359,"results":"23","hashOfConfig":"15"},{"size":382,"mtime":1608144072669,"results":"24","hashOfConfig":"15"},{"size":376,"mtime":1608207221187,"results":"25","hashOfConfig":"15"},{"size":2767,"mtime":1608207623068,"results":"26","hashOfConfig":"15"},{"size":5636,"mtime":1608219307806,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"szlllp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\index.js",[],["56","57"],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\App.js",["58"],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Nav.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Options.js",["59"],"import React, { Component } from \"react\";\r\nimport yoga from \"../yoga1.jpg\";\r\n\r\nexport default class Options extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      time: \"\",\r\n      option: \"meditation\",\r\n      showMedOptions: true,\r\n      medOption: \"Mindfulness\",\r\n      yogaoption: \"vrikshasan\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state);\r\n\r\n    if (this.state.option === \"yoga\") {\r\n      this.props.history.push(\"/yoga/:treePose\");\r\n    }\r\n  };\r\n\r\n  handelChange = (e) => {\r\n    this.setState({ option: e.target.value });\r\n    if (this.state.option === \"yoga\") {\r\n      this.setState({\r\n        showMedOptions: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showMedOptions: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={yoga} className=\"imageAnim\" alt=\"Yoga\" />\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <div\r\n              className=\"container\"\r\n              style={{\r\n                width: \"550px\",\r\n                background: \"black\",\r\n                borderRadius: \"8px\",\r\n                marginRight: \"280px\",\r\n                marginTop: \"70px\",\r\n              }}\r\n            >\r\n              <form\r\n                onSubmit={this.handleSubmit}\r\n                className=\"OptionForm\"\r\n                style={{}}\r\n              >\r\n                <br />\r\n                <h1 style={{ fontFamily: \"Catamaran\" }}></h1>\r\n\r\n                <div className=\"form-group m-1\">\r\n                  <label style={{ float: \"left\" }}>\r\n                    How much time do you have?\r\n                  </label>\r\n                  <input\r\n                    placeholder=\"time\"\r\n                    onChange={(e) => {\r\n                      this.setState({ time: e.target.value });\r\n                    }}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group m-1\">\r\n                  <label style={{ float: \"left\" }}>\r\n                    Which activity would you preffer?\r\n                  </label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={this.state.option}\r\n                    onChange={this.handelChange}\r\n                  >\r\n                    <option value=\"meditation\">Meditation</option>\r\n                    <option value=\"yoga\">Yoga</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {this.state.showMedOptions && (\r\n                  <div className=\"form-group m-1\">\r\n                    <label style={{ float: \"left\" }}>\r\n                      What do you want to work on?\r\n                    </label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={this.state.medOption}\r\n                      onChange={(e) => {\r\n                        this.setState({ medOption: e.target.value });\r\n                      }}\r\n                    >\r\n                      <option value=\"meditation\">Mindfulness</option>\r\n                      <option value=\"yoga\">Realeasing Stress</option>\r\n                      <option value=\"yoga\">Realeasing Anxiety</option>\r\n                    </select>\r\n                  </div>\r\n                )}\r\n\r\n                {!this.state.showMedOptions && (\r\n                  <div className=\"form-group m-1\">\r\n                    <label style={{ float: \"left\" }}>\r\n                      What do you want to work on?\r\n                    </label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      value={this.state.yogaoption}\r\n                      onChange={(e) => {\r\n                        this.setState({ yogaoption: e.target.value });\r\n                      }}\r\n                    >\r\n                      <option value=\"vrikshasan\">Tree Pose</option>\r\n                      <option value=\"yoga\">Chair Pose</option>\r\n                    </select>\r\n                  </div>\r\n                )}\r\n\r\n                <br />\r\n                <button\r\n                  className=\"btn btn-primary  btn-block m-2\"\r\n                  type=\"submit\"\r\n                  style={{\r\n                    border: \"none\",\r\n                    color: \"white\",\r\n                    background: \"#a30a3a\",\r\n                  }}\r\n                >\r\n                  Submit\r\n                </button>\r\n\r\n                <br />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js",["60"],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Player.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Controls.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Details.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Home.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Login.js",["61","62"],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Register.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":11},{"ruleId":"71","severity":1,"message":"72","line":66,"column":17,"nodeType":"73","endLine":66,"endColumn":57},{"ruleId":"74","severity":1,"message":"75","line":40,"column":6,"nodeType":"76","endLine":40,"endColumn":24,"suggestions":"77"},{"ruleId":"67","severity":1,"message":"78","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":72,"column":17,"nodeType":"73","endLine":72,"endColumn":29},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'songs.length'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [currentSongIndex, songs.length]",{"range":"86","text":"87"},[984,1002],"[currentSongIndex, songs.length]"]