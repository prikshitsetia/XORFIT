[{"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\index.js":"1","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js":"2","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\App.js":"3","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Home.js":"4","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Nav.js":"5","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js":"6","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Register.js":"7","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Options.js":"8","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js":"9","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Login.js":"10","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Player.js":"11","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Controls.js":"12","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Details.js":"13","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\XorFit.js":"14","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\poseWrapper\\index.js":"15","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\webcamFeed\\index.js":"16","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\lib\\posenetWrapper.js":"17","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\lib\\bodypart.js":"18","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\lib\\mathModels.js":"19","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\poseSelector\\index.js":"20","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\checklist\\index.js":"21","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\poseDotter\\index.js":"22","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\lib\\regressionHandler.js":"23","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\poseDetails\\index.js":"24"},{"size":565,"mtime":1608128724465,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1608128724467,"results":"27","hashOfConfig":"26"},{"size":1532,"mtime":1608299310476,"results":"28","hashOfConfig":"26"},{"size":481,"mtime":1608297128810,"results":"29","hashOfConfig":"26"},{"size":789,"mtime":1608296351098,"results":"30","hashOfConfig":"26"},{"size":1846,"mtime":1608206465514,"results":"31","hashOfConfig":"26"},{"size":5973,"mtime":1608288922780,"results":"32","hashOfConfig":"26"},{"size":5257,"mtime":1608299310540,"results":"33","hashOfConfig":"26"},{"size":2950,"mtime":1608299310488,"results":"34","hashOfConfig":"26"},{"size":4302,"mtime":1608230265146,"results":"35","hashOfConfig":"26"},{"size":1574,"mtime":1608288881170,"results":"36","hashOfConfig":"26"},{"size":821,"mtime":1608281427596,"results":"37","hashOfConfig":"26"},{"size":423,"mtime":1608288881064,"results":"38","hashOfConfig":"26"},{"size":413,"mtime":1608299310480,"results":"39","hashOfConfig":"26"},{"size":2972,"mtime":1608299310646,"results":"40","hashOfConfig":"26"},{"size":835,"mtime":1608299310704,"results":"41","hashOfConfig":"26"},{"size":8561,"mtime":1608299310723,"results":"42","hashOfConfig":"26"},{"size":178,"mtime":1608299310715,"results":"43","hashOfConfig":"26"},{"size":1834,"mtime":1608299310720,"results":"44","hashOfConfig":"26"},{"size":4385,"mtime":1608299310628,"results":"45","hashOfConfig":"26"},{"size":2747,"mtime":1608299310569,"results":"46","hashOfConfig":"26"},{"size":2528,"mtime":1608299310601,"results":"47","hashOfConfig":"26"},{"size":1007,"mtime":1608299310725,"results":"48","hashOfConfig":"26"},{"size":626,"mtime":1608299310587,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1thu545",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\index.js",[],["105","106"],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\App.js",["107"],"import Nav from \"./components/Nav\";\r\nimport Options from \"./components/Options\";\r\nimport Yoga from \"./components/Yoga\";\r\nimport Meditation from \"./components/Meditation\";\r\nimport Home from \"./components/Home\";\r\nimport Register from \"./components/Register\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport XorFit from './XorFit';\r\nimport './App.css'\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n                 \r\n          <Route exact path=\"/\" render={(props) => <Home {...props} />} />\r\n\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/register\"\r\n              render={(props) => <Register {...props} />}\r\n            />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/options\"\r\n              render={(props) => <Options {...props} />}\r\n            />\r\n\r\n            <Route exact path=\"/yoga\" render={(props) => <Yoga {...props} />} />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/meditation/:category\"\r\n              render={(props) => <Meditation {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/practicePose\"\r\n              render={(props) => <XorFit {...props} />}\r\n            />\r\n\r\n\r\n           \r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Home.js",["108"],"import React, { Component } from 'react'\r\nimport './Home.css';\r\nimport Login from './Login';\r\nimport logo from '../Logo.png';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid login-block\">\r\n                 \r\n                <div className=\"login\">\r\n               <img src={logo} height=\"150\" ></img>\r\n                    <Login/> \r\n                </div>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Nav.js",["109","110","111"],"import React, { Component } from \"react\";\r\nimport \"../general.css\";\r\nimport logo from \"../Logo.png\";\r\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nexport default class Nav extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid nav_wrapper\" >\r\n        <img src={logo} height=\"80\"></img>\r\n        {/* <Router>\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <Link to=\"/options\">\r\n                <li className=\"nav-item\">Home</li>\r\n              </Link>\r\n\r\n              <li className=\"nav-item\">Dashboard</li>\r\n              <li className=\"nav-item\">Logout</li>\r\n            </ul>\r\n          </nav>\r\n        </Router> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Register.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Options.js",["112","113","114","115"],"import React, { Component } from \"react\";\r\nimport yoga from \"../yoga1.jpg\";\r\nimport yogaButton from \"../yoga-button.png\";\r\nimport meditationButton from \"../meditation-button.png\";\r\nimport excerciseButton from \"../excercise-button.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Options extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      min: \"0\",\r\n      sec: \"0\",\r\n      time: \"0\",\r\n      showMedOptions: false,\r\n    };\r\n  }\r\n  handelChange = (e) => {\r\n    this.setState({ option: e.target.name });\r\n    if (e.target.name === \"yogaButton\") {\r\n      this.props.history.push(\"/yoga\");\r\n    } else if (e.target.name === \"excerciseButton\") {\r\n      this.props.history.push(\"/excercise\");\r\n    } else {\r\n      this.setState({\r\n        showMedOptions: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  onMedClick = (e) => {\r\n    console.log(e.target.name);\r\n    this.props.history.push(\"/meditation/\" + e.target.name);\r\n  };\r\n\r\n  setClock = (e) => {\r\n    this.setState({\r\n      time: this.state.min + \":\" + this.state.sec,\r\n    });\r\n    e.target.style.display = \"none\";\r\n  };\r\n\r\n  onTimeChange = (e) => {\r\n    // console.log(e.target)\r\n    if (e.target.value <= 60) {\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    } else {\r\n      alert(\"Enter Valid Time\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={yoga} className=\"imageAnim\" alt=\"Yoga\" />\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <div id=\"alarm-dialog\">\r\n              <h2>Set Timer</h2>\r\n\r\n              <label className=\"minutes\">\r\n                Minutes\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"60\"\r\n                  value={this.state.min}\r\n                  name=\"min\"\r\n                  onChange={this.onTimeChange}\r\n                  placeholder=\"0\"\r\n                />\r\n              </label>\r\n              <span id=\"alarm-colon\">:</span>\r\n              <label className=\"seconds\">\r\n                Seconds\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"60\"\r\n                  value={this.state.sec}\r\n                  name=\"sec\"\r\n                  onChange={this.onTimeChange}\r\n                  placeholder=\"0\"\r\n                />\r\n              </label>\r\n\r\n              <div className=\"button-holder\">\r\n                <button\r\n                  id=\"alarm-set\"\r\n                  className=\"btn btn-alarm\"\r\n                  style={{ width: \"20%\" }}\r\n                  onClick={this.setClock}\r\n                  ref={this.myRef}\r\n                >\r\n                  Set\r\n                </button>\r\n                <button\r\n                  id=\"alarm-clear\"\r\n                  className=\"btn btn-alarm\"\r\n                  style={{ width: \"20%\" }}\r\n                  onClick={() => {\r\n                    this.myRef.current.style.display = \"inline\";\r\n                    this.setState({\r\n                      min: 0,\r\n                      sec: 0,\r\n                    });\r\n                  }}\r\n                >\r\n                  Clear\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"activity-dialog\">\r\n              <h2>Select Activity</h2>\r\n              <button className=\"btn\">\r\n                <img\r\n                  src={yogaButton}\r\n                  height=\"140\"\r\n                  name=\"yogaButton\"\r\n                  onClick={this.handelChange}\r\n                ></img>\r\n              </button>\r\n              <button className=\"btn\">\r\n                <img\r\n                  src={meditationButton}\r\n                  height=\"140\"\r\n                  name=\"meditationButton\"\r\n                  onClick={this.handelChange}\r\n                ></img>\r\n              </button>\r\n              <button className=\"btn\">\r\n                <img\r\n                  src={excerciseButton}\r\n                  height=\"140\"\r\n                  name=\"excerciseButton\"\r\n                  onClick={this.handelChange}\r\n                ></img>\r\n              </button>\r\n            </div>\r\n            {this.state.showMedOptions ? (\r\n              <div id=\"med-dialog\">\r\n                <h2>Select Meditation Type</h2>\r\n                <button\r\n                  className=\"btn btn-alarm\"\r\n                  name=\"mindfullness\"\r\n                  onClick={this.onMedClick}\r\n                >\r\n                  Mindfulness\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-alarm\"\r\n                  name=\"stress\"\r\n                  onClick={this.onMedClick}\r\n                >\r\n                  Stress Relieve\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-alarm\"\r\n                  name=\"anxiety\"\r\n                  onClick={this.onMedClick}\r\n                >\r\n                  Anxiety Relieve\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js",["116","117"],"import { useState, useEffect } from \"react\";\r\nimport Player from \"./Player\";\r\nimport bg from \"../bg.jpg\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction Meditation() {\r\n  let location = useLocation();\r\n  const locationVariable = location.pathname.split(\"/\");\r\n  console.log(locationVariable);\r\n  const [songs] = useState([\r\n    {\r\n      title: \"Mindfullness\",\r\n      artist: \"Help Guide\",\r\n      img_src: \"./images/song-3.jpg\",\r\n      src: \"./audioFile/song1.mp3\",\r\n      category: \"stress\",\r\n      time: 5,\r\n    },\r\n    {\r\n      title: \"Breathing Meditation\",\r\n      artist: \"Help Guide\",\r\n      img_src: \"./images/song-4.jpg\",\r\n      src: \"./audioFile/song2.mp3\",\r\n      category: \"mindfullness\",\r\n      time: 10,\r\n    },\r\n    {\r\n      title: \"Breathing Meditation\",\r\n      artist: \"Help Guide\",\r\n      img_src: \"./images/song-2.jpg\",\r\n      src: \"./audioFile/song3.mp3\",\r\n      category: \"anxiety\",\r\n      time: 5,\r\n    },\r\n  ]);\r\n\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const [nextSongIndex, setNextSongIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setNextSongIndex(() => {\r\n      if (currentSongIndex + 1 > songs.length - 1) {\r\n        return 0;\r\n      } else {\r\n        return currentSongIndex + 1;\r\n      }\r\n    });\r\n  }, [currentSongIndex]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4\">\r\n        <div\r\n          class=\"card\"\r\n          style={{\r\n            width: \"80%\",\r\n            height: \"100vh\",\r\n            borderRadius: \"0px\",\r\n            // background: \"#755139FF\",\r\n            background: \"#062F4F\",\r\n          }}\r\n        >\r\n          <div class=\"card-body\">\r\n            <h4\r\n              style={{\r\n                textAlign: \"center\",\r\n                marginTop: \"10px\",\r\n                fontWeight: \"bold\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              Play List\r\n            </h4>\r\n            <br />\r\n            {songs.map((s) => {\r\n              return (\r\n                <div className=\"mt-3\">\r\n                  <div className=\"row\" style={{}}>\r\n                    <div className=\"col-3\">\r\n                      <img\r\n                        src={s.img_src}\r\n                        alt=\"\"\r\n                        style={{\r\n                          width: \"50px\",\r\n                          height: \"50px\",\r\n                          borderRadius: \"30px\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col\" style={{ color: \"white\" }}>\r\n                      <h5 class=\"card-title\">{s.title}</h5>\r\n                      <p\r\n                        class=\"card-text\"\r\n                        style={{\r\n                          marginTop: \"-10px\",\r\n                          fontSize: \"14px\",\r\n                          marginBottom: \"10px\",\r\n                        }}\r\n                      >\r\n                        {s.artist} ( {s.time}:00 ) Mins\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"app col\" style={{ marginLeft: \"-130px\" }}>\r\n        <div className=\"ocean\">\r\n          <div className=\"wave\"></div>\r\n          <div className=\"wave\"></div>\r\n        </div>\r\n\r\n        <Player\r\n          currentSongIndex={currentSongIndex}\r\n          setCurrentSongIndex={setCurrentSongIndex}\r\n          nextSongIndex={nextSongIndex}\r\n          songs={songs}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Meditation;\r\n","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Login.js",["118"],"import React, { Component } from \"react\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport \"./Login.css\";\r\nimport axios from \"axios\";\r\nconst qs = require(\"querystring\");\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      link: \" https://809feafcdee6.ngrok.io/login\",\r\n      input: {  \r\n        emailAddress: \"\",\r\n        password: \"\",      \r\n      },\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState((prevState) => {\r\n      return {\r\n        input: {\r\n          ...prevState.input,\r\n          [name]: value,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    console.log(this.state.input);\r\n    const params = {\r\n      email: this.state.input.emailAddress,  \r\n      password: this.state.input.password,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n    };\r\n    console.log(params);\r\n  \r\n    axios.post(this.state.link, qs.stringify(params), config).then(\r\n      (response) => {\r\n  \r\n        if(response.data ===1){\r\n          // alert(\"Welcome to XorFit\");\r\n         this.props.history.push('/options');\r\n        }\r\n        else{\r\n          alert(\"Wrong Username or Password\")\r\n        }\r\n        \r\n        \r\n      },\r\n      (error) => {\r\n        alert(\"Please try again later\")\r\n        console.log(error);\r\n      }\r\n    );\r\n   \r\n   \r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container login-container\">\r\n        <div className=\"d-flex justify-content-center h-100\">\r\n          <div className=\"card login-card\">\r\n            <div className=\"card-header\">\r\n              <h3>Sign In</h3>\r\n              <div className=\"d-flex justify-content-end social_icon\">\r\n                <span>\r\n                  <i className=\"fab fa-google-plus-square\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"input-group form-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fas fa-user\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email address\"\r\n                    name=\"emailAddress\"\r\n                    value={this.state.input.emailAddress}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group form-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fas fa-key\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.input.password}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"row align-items-center remember\">\r\n                  <input type=\"checkbox\" />\r\n                  Remember Me\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Login\"\r\n                    className=\"btn float-right login_btn\"\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"d-flex justify-content-center links\">\r\n                Don't have an account?<a href=\"register\">Sign Up</a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"#\">Forgot your password?</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Login);","C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Player.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Controls.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\Details.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\XorFit.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\poseWrapper\\index.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\webcamFeed\\index.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\lib\\posenetWrapper.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\lib\\bodypart.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\lib\\mathModels.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\poseSelector\\index.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\checklist\\index.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\poseDotter\\index.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\lib\\regressionHandler.js",[],"C:\\Users\\karigar_s\\Documents\\GitHub\\XORFIT\\client\\xorfit\\src\\components\\poseDetails\\index.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"128","line":12,"column":16,"nodeType":"129","endLine":12,"endColumn":46},{"ruleId":"123","severity":1,"message":"130","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"131","line":4,"column":33,"nodeType":"125","messageId":"126","endLine":4,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":10,"column":9,"nodeType":"129","endLine":10,"endColumn":37},{"ruleId":"123","severity":1,"message":"130","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":99,"column":43,"nodeType":"129","endLine":99,"endColumn":124},{"ruleId":"127","severity":1,"message":"128","line":100,"column":43,"nodeType":"129","endLine":100,"endColumn":136},{"ruleId":"127","severity":1,"message":"128","line":101,"column":43,"nodeType":"129","endLine":101,"endColumn":134},{"ruleId":"123","severity":1,"message":"132","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":10},{"ruleId":"133","severity":1,"message":"134","line":49,"column":6,"nodeType":"135","endLine":49,"endColumn":24,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":131,"column":17,"nodeType":"129","endLine":131,"endColumn":29},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Router' is defined but never used.","'bg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'songs.length'. Either include it or remove the dependency array.","ArrayExpression",["141"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [currentSongIndex, songs.length]",{"range":"144","text":"145"},[1277,1295],"[currentSongIndex, songs.length]"]