[{"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\index.js":"1","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\App.js":"2","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js":"3","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Nav.js":"4","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js":"5","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Options.js":"6","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js":"7","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Player.js":"8","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Controls.js":"9","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Details.js":"10","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Home.js":"11","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Login.js":"12","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Register.js":"13"},{"size":565,"mtime":1608126386820,"results":"14","hashOfConfig":"15"},{"size":1284,"mtime":1608233839773,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1608126386821,"results":"17","hashOfConfig":"15"},{"size":723,"mtime":1608145058148,"results":"18","hashOfConfig":"15"},{"size":1846,"mtime":1608127407925,"results":"19","hashOfConfig":"15"},{"size":5072,"mtime":1608227338116,"results":"20","hashOfConfig":"15"},{"size":2157,"mtime":1608271890177,"results":"21","hashOfConfig":"15"},{"size":1572,"mtime":1608232528222,"results":"22","hashOfConfig":"15"},{"size":811,"mtime":1608229767106,"results":"23","hashOfConfig":"15"},{"size":422,"mtime":1608232702267,"results":"24","hashOfConfig":"15"},{"size":376,"mtime":1608207221187,"results":"25","hashOfConfig":"15"},{"size":2767,"mtime":1608207623068,"results":"26","hashOfConfig":"15"},{"size":5756,"mtime":1608227321878,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"szlllp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\index.js",[],["58","59"],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\App.js",["60"],"import Nav from \"./components/Nav\";\r\nimport Options from \"./components/Options\";\r\nimport Yoga from \"./components/Yoga\";\r\nimport Meditation from \"./components/Meditation\";\r\nimport Home from \"./components/Home\";\r\nimport Register from \"./components/Register\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" render={(props) => <Home {...props} />} />\r\n\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/register\"\r\n              render={(props) => <Register {...props} />}\r\n            />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/options\"\r\n              render={(props) => <Options {...props} />}\r\n            />\r\n\r\n            <Route exact path=\"/yoga\" render={(props) => <Yoga {...props} />} />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/meditation\"\r\n              render={(props) => <Meditation {...props} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\reportWebVitals.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Nav.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Yoga.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Options.js",["61","62","63","64"],"import React, { Component } from \"react\";\r\nimport yoga from \"../yoga1.jpg\";\r\nimport yogaButton from \"../yoga-button.png\";\r\nimport meditationButton from \"../meditation-button.png\";\r\nimport excerciseButton from \"../excercise-button.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Options extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      min: \"0\",\r\n      sec: \"0\",\r\n      time: \"0\",\r\n      showMedOptions: false,\r\n    };\r\n  }\r\n  handelChange = (e) => {\r\n    this.setState({ option: e.target.name });\r\n    if (e.target.name === \"yogaButton\") {\r\n      this.props.history.push(\"/yoga\");\r\n    } else if (e.target.name === \"excerciseButton\") {\r\n      this.props.history.push(\"/excercise\");\r\n    } else {\r\n      this.setState({\r\n        showMedOptions: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  onMedClick = (e) => {\r\n    console.log(e.target.name);\r\n    this.props.history.push(\"/meditation/\" + e.target.name);\r\n  };\r\n\r\n  setClock = (e) => {\r\n    this.setState({\r\n      time: this.state.min + \":\" + this.state.sec,\r\n    });\r\n    console.log(this.state.time);\r\n  };\r\n\r\n  onTimeChange = (e) => {\r\n    console.log(e.target);\r\n    if (e.target.value <= 60) {\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    } else {\r\n      alert(\"Enter Valid Time\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={yoga} className=\"imageAnim\" alt=\"Yoga\" />\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <div id=\"alarm-dialog\">\r\n              <h2>Set Timer</h2>\r\n\r\n              <label className=\"minutes\">\r\n                Minutes\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"60\"\r\n                  value={this.state.min}\r\n                  name=\"min\"\r\n                  onChange={this.onTimeChange}\r\n                  placeholder=\"0\"\r\n                />\r\n              </label>\r\n              <span id=\"alarm-colon\">:</span>\r\n              <label className=\"seconds\">\r\n                Seconds\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"60\"\r\n                  value={this.state.sec}\r\n                  name=\"sec\"\r\n                  onChange={this.onTimeChange}\r\n                  placeholder=\"0\"\r\n                />\r\n              </label>\r\n\r\n              <div className=\"button-holder\">\r\n                <button\r\n                  id=\"alarm-set\"\r\n                  className=\"btn btn-alarm\"\r\n                  style={{ width: \"20%\" }}\r\n                  onClick={this.setClock}\r\n                >\r\n                  Set\r\n                </button>\r\n                <button\r\n                  id=\"alarm-clear\"\r\n                  className=\"btn btn-alarm\"\r\n                  style={{ width: \"20%\" }}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      min: 0,\r\n                      sec: 0,\r\n                    });\r\n                  }}\r\n                >\r\n                  Clear\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"activity-dialog\">\r\n              <h2>Select Activity</h2>\r\n              <button className=\"btn\">\r\n                <img\r\n                  src={yogaButton}\r\n                  height=\"140\"\r\n                  name=\"yogaButton\"\r\n                  onClick={this.handelChange}\r\n                ></img>\r\n              </button>\r\n              <button className=\"btn\">\r\n                <img\r\n                  src={meditationButton}\r\n                  height=\"140\"\r\n                  name=\"meditationButton\"\r\n                  onClick={this.handelChange}\r\n                ></img>\r\n              </button>\r\n              <button className=\"btn\">\r\n                <img\r\n                  src={excerciseButton}\r\n                  height=\"140\"\r\n                  name=\"excerciseButton\"\r\n                  onClick={this.handelChange}\r\n                ></img>\r\n              </button>\r\n            </div>\r\n            {this.state.showMedOptions ? (\r\n              <div id=\"med-dialog\">\r\n                <h2>Select Meditation Type</h2>\r\n                <button\r\n                  className=\"btn btn-alarm\"\r\n                  name=\"mindfullness\"\r\n                  onClick={this.onMedClick}\r\n                >\r\n                  Mindfulness\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-alarm\"\r\n                  name=\"stress\"\r\n                  onClick={this.onMedClick}\r\n                >\r\n                  Stress Relieve\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-alarm\"\r\n                  name=\"anxiety\"\r\n                  onClick={this.onMedClick}\r\n                >\r\n                  Anxiety Relieve\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Meditation.js",["65"],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Player.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Controls.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Details.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Home.js",[],"G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Login.js",["66","67"],"import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      link: \" https://sweet-dragonfly-92.loca.lt/signup\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container login-container\">\r\n        <div className=\"d-flex justify-content-center h-100\">\r\n          <div className=\"card login-card\">\r\n            <div className=\"card-header\">\r\n              <h3>Sign In</h3>\r\n              <div className=\"d-flex justify-content-end social_icon\">\r\n                <span>\r\n                  <i className=\"fab fa-google-plus-square\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.savaData}>\r\n                <div className=\"input-group form-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fas fa-user\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email address\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group form-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fas fa-key\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"row align-items-center remember\">\r\n                  <input type=\"checkbox\" />\r\n                  Remember Me\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Login\"\r\n                    className=\"btn float-right login_btn\"\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <div className=\"d-flex justify-content-center links\">\r\n                Don't have an account?<a href=\"register\">Sign Up</a>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <a href=\"#\">Forgot your password?</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","G:\\Xoriant\\Hackathon\\XORFIT\\client\\xorfit\\src\\components\\Register.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":11},{"ruleId":"72","severity":1,"message":"76","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":122,"column":17,"nodeType":"79","endLine":127,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":130,"column":17,"nodeType":"79","endLine":135,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":138,"column":17,"nodeType":"79","endLine":143,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":48,"column":6,"nodeType":"82","endLine":48,"endColumn":24,"suggestions":"83"},{"ruleId":"72","severity":1,"message":"84","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":72,"column":17,"nodeType":"79","endLine":72,"endColumn":29},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'songs.length'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [currentSongIndex, songs.length]",{"range":"92","text":"93"},[1273,1291],"[currentSongIndex, songs.length]"]